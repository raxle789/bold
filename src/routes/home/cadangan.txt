import './home.css';
import { Link } from 'react-router-dom';
import { useState, useEffect } from 'react';
import myGif1 from '../../assets/Relaxing_gif1.gif';
import myGif2 from '../../assets/Relaxing_gif2.gif';
import myGif3 from '../../assets/Relaxing_gif3.gif';
import myGif4 from '../../assets/Relaxing_gif4.gif';
import myGif5 from '../../assets/Relaxing_gif5.gif';
import myGif6 from '../../assets/Relaxing_gif6.gif';
import myGif7 from '../../assets/Relaxing_gif7.gif';
import homePressed from '../../assets/dashboard ditekan.svg';
import listUnpressed from '../../assets/kalender.svg';
import profileUnpressed from '../../assets/user.svg';
import { userData } from '../log in/log-in.component';
import { addUser, getUserField } from '../../utils/firebase/firebase.util';
import { useNavigate } from 'react-router-dom';
import { signOutUser } from '../../utils/firebase/firebase.util';

const Home = () => {
    const key = 'USER_DATA';
    const dataFromUser = userData();
    let user = null;
    const navigate = useNavigate();
    const handleSignOut = async () => {
        await signOutUser();
        navigate('/');
        console.log('user signed out!');
    }
    const checksStorage = () => {
        if (typeof(Storage) === undefined) {
          alert('Browser kamu tidak mendukung local storage, gunakanlah browser populer');
          return false;
        } else {
          return true;
        }
    }
    const loadUserData = async () => {
        let userObject = {greetingsName: 'User', bio: '', gender: 'Male', createdItems: 0, finishedItems: 0, ...dataFromUser};
        
        if (checksStorage()) {
            user = JSON.parse(localStorage.getItem(`${key}`));
            if (user == null || user === "undefined") {
                console.log("set local");
                localStorage.setItem(key, JSON.stringify(userObject));
                user = JSON.parse(localStorage.getItem(key));
            }
        }

        const confirm = await getUserField(user.uid);
        if (confirm === "undefined") {
            await addUser(user.uid, userObject);
        } else {
            userObject = confirm;
            localStorage.setItem(key, JSON.stringify(userObject));
            user = JSON.parse(localStorage.getItem(key));
            console.log("userObject", userObject);
        }
    }

    let [userField, setUserField] = useState({});
    const getUserData = async () => {
        setUserField(await getUserField(user.uid));
        console.log('userField', userField);
    }

    useEffect(() => {
        getUserData();
    }, []);
    

    useEffect(() => {
        loadUserData();
    }, []);
      
    const whatDay = new Date().getDay();
    const Gifs = [myGif1, myGif2, myGif3, myGif4, myGif5, myGif6, myGif7];
    const justGif = Gifs[whatDay];
    return (
        <div>
            <div className="header-gradient"></div>
            <div className="header-gradient-cover"></div>
            <h1 className='page-title'>Home</h1>
            <h2 className='greetings'>Hello, {userField.greetingsName === null ? "User" : userField.greetingsName}</h2>
            <p className='quotes'>“Details matter, it’s worth waiting to get it right.” <br /> - Steve Jobs</p>
            <div className="statistic-container">
                <h2 className='statistic'>Statistic</h2> <br/>
                <h1 className='tulisan1'><span className='span1'></span> Memories Created</h1>
                <h1 className='tulisan2'><span className='span2'></span> Memories Finished</h1>
            </div>
            <div className="gif-container"><img src={justGif} alt="relaxing gif" className='gif' /></div>
            <div className='navigation'>
                <Link to="/home"><img src={homePressed} alt="home pressed" className='home-button' /></Link>
                <Link to="/list"><img src={listUnpressed} alt="list unpressed" className='list-button' /></Link>
                <Link to="/profile"><img src={profileUnpressed} alt="profile unpressed" className='profile-button' /></Link>
            </div>
            <div className='logout-button' >
                <Link className='logout-text' onClick={handleSignOut}>Log out</Link>
            </div>
        </div>
    );
}

export default Home;